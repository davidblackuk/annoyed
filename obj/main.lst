                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _initializeCpc
                             13 	.globl _module_menu_initialize
                             14 	.globl _module_game_initialize
                             15 	.globl _cpct_setPALColour
                             16 	.globl _cpct_setPalette
                             17 	.globl _cpct_waitVSYNC
                             18 	.globl _cpct_setVideoMode
                             19 	.globl _cpct_disableFirmware
                             20 	.globl _play_scene
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _INITIALIZED
                             32 ;--------------------------------------------------------
                             33 ; absolute external ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DABS (ABS)
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _HOME
                             47 	.area _HOME
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 ;src/main.c:9: void initializeCpc()
                             53 ;	---------------------------------
                             54 ; Function initializeCpc
                             55 ; ---------------------------------
   0000                      56 _initializeCpc::
                             57 ;src/main.c:13: cpct_disableFirmware();
   0000 CDr00r00      [17]   58 	call	_cpct_disableFirmware
                             59 ;src/main.c:15: cpct_setBorder(HW_BLACK);
   0003 21 10 14      [10]   60 	ld	hl, #0x1410
   0006 E5            [11]   61 	push	hl
   0007 CDr00r00      [17]   62 	call	_cpct_setPALColour
                             63 ;src/main.c:16: cpct_setBorder(HW_WHITE);
   000A 21 10 00      [10]   64 	ld	hl, #0x0010
   000D E5            [11]   65 	push	hl
   000E CDr00r00      [17]   66 	call	_cpct_setPALColour
                             67 ;src/main.c:19: cpct_setVideoMode(0);
   0011 2E 00         [ 7]   68 	ld	l, #0x00
   0013 CDr00r00      [17]   69 	call	_cpct_setVideoMode
                             70 ;src/main.c:21: cpct_setPalette((u8 *)g_palette, 16);
   0016 21 10 00      [10]   71 	ld	hl, #0x0010
   0019 E5            [11]   72 	push	hl
   001A 21r00r00      [10]   73 	ld	hl, #_g_palette
   001D E5            [11]   74 	push	hl
   001E CDr00r00      [17]   75 	call	_cpct_setPalette
   0021 C9            [10]   76 	ret
                             77 ;src/main.c:24: void main(void)
                             78 ;	---------------------------------
                             79 ; Function main
                             80 ; ---------------------------------
   0022                      81 _main::
                             82 ;src/main.c:26: high_score = 1000;
   0022 21 E8 03      [10]   83 	ld	hl, #0x03e8
   0025 22r00r00      [16]   84 	ld	(_high_score), hl
                             85 ;src/main.c:27: initializeCpc();
   0028 CDr00r00      [17]   86 	call	_initializeCpc
                             87 ;src/main.c:28: module_menu_initialize();
   002B CDr00r00      [17]   88 	call	_module_menu_initialize
                             89 ;src/main.c:29: module_game_initialize();
   002E CDr00r00      [17]   90 	call	_module_game_initialize
                             91 ;src/main.c:31: while (1)
   0031                      92 00102$:
                             93 ;src/main.c:33: play_scene(&scene_menu);
   0031 21r00r00      [10]   94 	ld	hl, #_scene_menu
   0034 E5            [11]   95 	push	hl
   0035 CDr42r00      [17]   96 	call	_play_scene
                             97 ;src/main.c:34: play_scene(&scene_game);
   0038 21r00r00      [10]   98 	ld	hl, #_scene_game
   003B E3            [19]   99 	ex	(sp),hl
   003C CDr42r00      [17]  100 	call	_play_scene
   003F F1            [10]  101 	pop	af
   0040 18 EF         [12]  102 	jr	00102$
                            103 ;src/main.c:38: void play_scene(Scene *scene)
                            104 ;	---------------------------------
                            105 ; Function play_scene
                            106 ; ---------------------------------
   0042                     107 _play_scene::
   0042 DD E5         [15]  108 	push	ix
   0044 DD 21 00 00   [14]  109 	ld	ix,#0
   0048 DD 39         [15]  110 	add	ix,sp
   004A F5            [11]  111 	push	af
                            112 ;src/main.c:42: scene->initialize();
   004B DD 4E 04      [19]  113 	ld	c,4 (ix)
   004E DD 46 05      [19]  114 	ld	b,5 (ix)
   0051 69            [ 4]  115 	ld	l, c
   0052 60            [ 4]  116 	ld	h, b
   0053 5E            [ 7]  117 	ld	e, (hl)
   0054 23            [ 6]  118 	inc	hl
   0055 66            [ 7]  119 	ld	h, (hl)
   0056 C5            [11]  120 	push	bc
   0057 6B            [ 4]  121 	ld	l, e
   0058 CDr00r00      [17]  122 	call	___sdcc_call_hl
   005B C1            [10]  123 	pop	bc
                            124 ;src/main.c:44: do
   005C 33            [ 6]  125 	inc	sp
   005D 33            [ 6]  126 	inc	sp
   005E C5            [11]  127 	push	bc
   005F                     128 00102$:
                            129 ;src/main.c:49: cpct_waitVSYNC();
   005F C5            [11]  130 	push	bc
   0060 CDr00r00      [17]  131 	call	_cpct_waitVSYNC
   0063 C1            [10]  132 	pop	bc
                            133 ;src/main.c:51: scene->draw();
   0064 E1            [10]  134 	pop	hl
   0065 E5            [11]  135 	push	hl
   0066 23            [ 6]  136 	inc	hl
   0067 23            [ 6]  137 	inc	hl
   0068 5E            [ 7]  138 	ld	e, (hl)
   0069 23            [ 6]  139 	inc	hl
   006A 66            [ 7]  140 	ld	h, (hl)
   006B C5            [11]  141 	push	bc
   006C 6B            [ 4]  142 	ld	l, e
   006D CDr00r00      [17]  143 	call	___sdcc_call_hl
   0070 C1            [10]  144 	pop	bc
                            145 ;src/main.c:52: state = scene->update();
   0071 69            [ 4]  146 	ld	l, c
   0072 60            [ 4]  147 	ld	h, b
   0073 11 04 00      [10]  148 	ld	de, #0x0004
   0076 19            [11]  149 	add	hl, de
   0077 5E            [ 7]  150 	ld	e, (hl)
   0078 23            [ 6]  151 	inc	hl
   0079 66            [ 7]  152 	ld	h, (hl)
   007A C5            [11]  153 	push	bc
   007B 6B            [ 4]  154 	ld	l, e
   007C CDr00r00      [17]  155 	call	___sdcc_call_hl
   007F C1            [10]  156 	pop	bc
                            157 ;src/main.c:57: for (i16 i = 0; i < t; i++)
   0080 11 00 00      [10]  158 	ld	de, #0x0000
   0083                     159 00106$:
   0083 7B            [ 4]  160 	ld	a, e
   0084 D6 05         [ 7]  161 	sub	a, #0x05
   0086 7A            [ 4]  162 	ld	a, d
   0087 17            [ 4]  163 	rla
   0088 3F            [ 4]  164 	ccf
   0089 1F            [ 4]  165 	rra
   008A DE 80         [ 7]  166 	sbc	a, #0x80
   008C 30 03         [12]  167 	jr	NC,00103$
   008E 13            [ 6]  168 	inc	de
   008F 18 F2         [12]  169 	jr	00106$
   0091                     170 00103$:
                            171 ;src/main.c:63: } while (state == Continue);
   0091 7D            [ 4]  172 	ld	a, l
   0092 B7            [ 4]  173 	or	a, a
   0093 28 CA         [12]  174 	jr	Z,00102$
   0095 DD F9         [10]  175 	ld	sp, ix
   0097 DD E1         [14]  176 	pop	ix
   0099 C9            [10]  177 	ret
                            178 	.area _CODE
                            179 	.area _INITIALIZER
                            180 	.area _CABS (ABS)
