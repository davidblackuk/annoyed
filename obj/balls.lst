                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module balls
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _background_bounce_ball
                             12 	.globl _background_restore_world_coords
                             13 	.globl _blocks_bounce_ball
                             14 	.globl _bat_bounce_ball
                             15 	.globl _cpct_getScreenPtr
                             16 	.globl _cpct_drawSpriteMasked
                             17 	.globl _serving
                             18 	.globl _all_balls
                             19 	.globl _balls_initialize
                             20 	.globl _balls_update
                             21 	.globl _balls_restore_background
                             22 	.globl _balls_draw
                             23 	.globl _balls_get_first_active
                             24 	.globl _initialize_balls
                             25 	.globl _center_ball
                             26 	.globl _handle_serve
                             27 	.globl _update_ball
                             28 ;--------------------------------------------------------
                             29 ; special function registers
                             30 ;--------------------------------------------------------
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _DATA
   0000                      35 _all_balls::
   0000                      36 	.ds 39
   0027                      37 _serving::
   0027                      38 	.ds 1
                             39 ;--------------------------------------------------------
                             40 ; ram data
                             41 ;--------------------------------------------------------
                             42 	.area _INITIALIZED
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area _DABS (ABS)
                             47 ;--------------------------------------------------------
                             48 ; global & static initialisations
                             49 ;--------------------------------------------------------
                             50 	.area _HOME
                             51 	.area _GSINIT
                             52 	.area _GSFINAL
                             53 	.area _GSINIT
                             54 ;--------------------------------------------------------
                             55 ; Home
                             56 ;--------------------------------------------------------
                             57 	.area _HOME
                             58 	.area _HOME
                             59 ;--------------------------------------------------------
                             60 ; code
                             61 ;--------------------------------------------------------
                             62 	.area _CODE
                             63 ;src/balls.c:31: void balls_initialize()
                             64 ;	---------------------------------
                             65 ; Function balls_initialize
                             66 ; ---------------------------------
   0000                      67 _balls_initialize::
                             68 ;src/balls.c:34: serving = 1;
   0000 21r27r00      [10]   69 	ld	hl,#_serving + 0
   0003 36 01         [10]   70 	ld	(hl), #0x01
                             71 ;src/balls.c:36: initialize_balls();
   0005 CDr27r01      [17]   72 	call	_initialize_balls
                             73 ;src/balls.c:39: center_ball(all_balls);
   0008 21r00r00      [10]   74 	ld	hl, #_all_balls
   000B E5            [11]   75 	push	hl
   000C CDr78r01      [17]   76 	call	_center_ball
   000F F1            [10]   77 	pop	af
   0010 C9            [10]   78 	ret
                             79 ;src/balls.c:42: void balls_update()
                             80 ;	---------------------------------
                             81 ; Function balls_update
                             82 ; ---------------------------------
   0011                      83 _balls_update::
                             84 ;src/balls.c:44: Ball *ball = all_balls;
   0011 01r00r00      [10]   85 	ld	bc, #_all_balls+0
                             86 ;src/balls.c:45: if (serving)
   0014 3Ar27r00      [13]   87 	ld	a,(#_serving + 0)
   0017 B7            [ 4]   88 	or	a, a
   0018 28 12         [12]   89 	jr	Z,00115$
                             90 ;src/balls.c:47: center_ball(ball);
   001A C5            [11]   91 	push	bc
   001B C5            [11]   92 	push	bc
   001C CDr78r01      [17]   93 	call	_center_ball
   001F F1            [10]   94 	pop	af
   0020 C1            [10]   95 	pop	bc
                             96 ;src/balls.c:48: if (key_serve_is_pressed)
   0021 3Ar00r00      [13]   97 	ld	a,(#_key_serve_is_pressed + 0)
   0024 B7            [ 4]   98 	or	a, a
   0025 C8            [11]   99 	ret	Z
                            100 ;src/balls.c:50: handle_serve(ball);
   0026 C5            [11]  101 	push	bc
   0027 CDrE2r01      [17]  102 	call	_handle_serve
   002A F1            [10]  103 	pop	af
   002B C9            [10]  104 	ret
                            105 ;src/balls.c:55: for (u8 i = 0; i < MAX_BALLS; i++)
   002C                     106 00115$:
   002C 1E 00         [ 7]  107 	ld	e, #0x00
   002E                     108 00108$:
   002E 7B            [ 4]  109 	ld	a, e
   002F D6 03         [ 7]  110 	sub	a, #0x03
   0031 D0            [11]  111 	ret	NC
                            112 ;src/balls.c:57: update_ball(ball);
   0032 C5            [11]  113 	push	bc
   0033 D5            [11]  114 	push	de
   0034 C5            [11]  115 	push	bc
   0035 CDr2Er02      [17]  116 	call	_update_ball
   0038 F1            [10]  117 	pop	af
   0039 D1            [10]  118 	pop	de
   003A C1            [10]  119 	pop	bc
                            120 ;src/balls.c:58: ball++;
   003B 21 0D 00      [10]  121 	ld	hl, #0x000d
   003E 09            [11]  122 	add	hl,bc
   003F 4D            [ 4]  123 	ld	c, l
   0040 44            [ 4]  124 	ld	b, h
                            125 ;src/balls.c:55: for (u8 i = 0; i < MAX_BALLS; i++)
   0041 1C            [ 4]  126 	inc	e
   0042 18 EA         [12]  127 	jr	00108$
                            128 ;src/balls.c:63: void balls_restore_background()
                            129 ;	---------------------------------
                            130 ; Function balls_restore_background
                            131 ; ---------------------------------
   0044                     132 _balls_restore_background::
   0044 DD E5         [15]  133 	push	ix
   0046 DD 21 00 00   [14]  134 	ld	ix,#0
   004A DD 39         [15]  135 	add	ix,sp
   004C F5            [11]  136 	push	af
   004D 3B            [ 6]  137 	dec	sp
                            138 ;src/balls.c:65: Ball *ball = all_balls;
   004E 01r00r00      [10]  139 	ld	bc, #_all_balls+0
                            140 ;src/balls.c:66: for (u8 i = 0; i < MAX_BALLS; i++)
   0051 DD 36 FD 00   [19]  141 	ld	-3 (ix), #0x00
   0055                     142 00105$:
   0055 DD 7E FD      [19]  143 	ld	a, -3 (ix)
   0058 D6 03         [ 7]  144 	sub	a, #0x03
   005A 30 3D         [12]  145 	jr	NC,00107$
                            146 ;src/balls.c:68: if (ball->active)
   005C 0A            [ 7]  147 	ld	a, (bc)
   005D B7            [ 4]  148 	or	a, a
   005E 28 2E         [12]  149 	jr	Z,00102$
                            150 ;src/balls.c:70: background_restore_world_coords(ball->prev_x, ball->prev_y, SP_BALL_W, SP_BALL_H);
   0060 69            [ 4]  151 	ld	l, c
   0061 60            [ 4]  152 	ld	h, b
   0062 11 07 00      [10]  153 	ld	de, #0x0007
   0065 19            [11]  154 	add	hl, de
   0066 5E            [ 7]  155 	ld	e, (hl)
   0067 23            [ 6]  156 	inc	hl
   0068 56            [ 7]  157 	ld	d, (hl)
   0069 C5            [11]  158 	push	bc
   006A FD E1         [14]  159 	pop	iy
   006C FD 7E 05      [19]  160 	ld	a, 5 (iy)
   006F DD 77 FE      [19]  161 	ld	-2 (ix), a
   0072 FD 7E 06      [19]  162 	ld	a, 6 (iy)
   0075 DD 77 FF      [19]  163 	ld	-1 (ix), a
   0078 C5            [11]  164 	push	bc
   0079 21 03 06      [10]  165 	ld	hl, #0x0603
   007C E5            [11]  166 	push	hl
   007D D5            [11]  167 	push	de
   007E DD 6E FE      [19]  168 	ld	l,-2 (ix)
   0081 DD 66 FF      [19]  169 	ld	h,-1 (ix)
   0084 E5            [11]  170 	push	hl
   0085 CDr00r00      [17]  171 	call	_background_restore_world_coords
   0088 21 06 00      [10]  172 	ld	hl, #6
   008B 39            [11]  173 	add	hl, sp
   008C F9            [ 6]  174 	ld	sp, hl
   008D C1            [10]  175 	pop	bc
   008E                     176 00102$:
                            177 ;src/balls.c:72: ball++;
   008E 21 0D 00      [10]  178 	ld	hl, #0x000d
   0091 09            [11]  179 	add	hl,bc
   0092 4D            [ 4]  180 	ld	c, l
   0093 44            [ 4]  181 	ld	b, h
                            182 ;src/balls.c:66: for (u8 i = 0; i < MAX_BALLS; i++)
   0094 DD 34 FD      [23]  183 	inc	-3 (ix)
   0097 18 BC         [12]  184 	jr	00105$
   0099                     185 00107$:
   0099 DD F9         [10]  186 	ld	sp, ix
   009B DD E1         [14]  187 	pop	ix
   009D C9            [10]  188 	ret
                            189 ;src/balls.c:76: void balls_draw()
                            190 ;	---------------------------------
                            191 ; Function balls_draw
                            192 ; ---------------------------------
   009E                     193 _balls_draw::
   009E DD E5         [15]  194 	push	ix
   00A0 DD 21 00 00   [14]  195 	ld	ix,#0
   00A4 DD 39         [15]  196 	add	ix,sp
   00A6 3B            [ 6]  197 	dec	sp
                            198 ;src/balls.c:79: Ball *ball = all_balls;
   00A7 01r00r00      [10]  199 	ld	bc, #_all_balls+0
                            200 ;src/balls.c:80: for (u8 i = 0; i < MAX_BALLS; i++)
   00AA DD 36 FF 00   [19]  201 	ld	-1 (ix), #0x00
   00AE                     202 00105$:
   00AE DD 7E FF      [19]  203 	ld	a, -1 (ix)
   00B1 D6 03         [ 7]  204 	sub	a, #0x03
   00B3 30 3A         [12]  205 	jr	NC,00107$
                            206 ;src/balls.c:82: if (ball->active)
   00B5 0A            [ 7]  207 	ld	a, (bc)
   00B6 B7            [ 4]  208 	or	a, a
   00B7 28 31         [12]  209 	jr	Z,00106$
                            210 ;src/balls.c:84: svmem = cpct_getScreenPtr(CPCT_VMEM_START, W_2_S_X(ball->x), W_2_S_Y(ball->y));
   00B9 69            [ 4]  211 	ld	l, c
   00BA 60            [ 4]  212 	ld	h, b
   00BB 23            [ 6]  213 	inc	hl
   00BC 23            [ 6]  214 	inc	hl
   00BD 23            [ 6]  215 	inc	hl
   00BE 5E            [ 7]  216 	ld	e, (hl)
   00BF 23            [ 6]  217 	inc	hl
   00C0 56            [ 7]  218 	ld	d, (hl)
   00C1 7B            [ 4]  219 	ld	a, e
   00C2 C6 08         [ 7]  220 	add	a, #0x08
   00C4 57            [ 4]  221 	ld	d, a
   00C5 69            [ 4]  222 	ld	l, c
   00C6 60            [ 4]  223 	ld	h, b
   00C7 23            [ 6]  224 	inc	hl
   00C8 7E            [ 7]  225 	ld	a, (hl)
   00C9 23            [ 6]  226 	inc	hl
   00CA 66            [ 7]  227 	ld	h, (hl)
   00CB C6 0C         [ 7]  228 	add	a, #0x0c
   00CD C5            [11]  229 	push	bc
   00CE 5F            [ 4]  230 	ld	e, a
   00CF D5            [11]  231 	push	de
   00D0 21 00 C0      [10]  232 	ld	hl, #0xc000
   00D3 E5            [11]  233 	push	hl
   00D4 CDr00r00      [17]  234 	call	_cpct_getScreenPtr
   00D7 11 03 06      [10]  235 	ld	de, #0x0603
   00DA D5            [11]  236 	push	de
   00DB E5            [11]  237 	push	hl
   00DC 21r00r00      [10]  238 	ld	hl, #_sp_masked_ball
   00DF E5            [11]  239 	push	hl
   00E0 CDr00r00      [17]  240 	call	_cpct_drawSpriteMasked
   00E3 C1            [10]  241 	pop	bc
                            242 ;src/balls.c:88: ball++;
   00E4 21 0D 00      [10]  243 	ld	hl, #0x000d
   00E7 09            [11]  244 	add	hl,bc
   00E8 4D            [ 4]  245 	ld	c, l
   00E9 44            [ 4]  246 	ld	b, h
   00EA                     247 00106$:
                            248 ;src/balls.c:80: for (u8 i = 0; i < MAX_BALLS; i++)
   00EA DD 34 FF      [23]  249 	inc	-1 (ix)
   00ED 18 BF         [12]  250 	jr	00105$
   00EF                     251 00107$:
   00EF 33            [ 6]  252 	inc	sp
   00F0 DD E1         [14]  253 	pop	ix
   00F2 C9            [10]  254 	ret
                            255 ;src/balls.c:93: Ball *balls_get_first_active()
                            256 ;	---------------------------------
                            257 ; Function balls_get_first_active
                            258 ; ---------------------------------
   00F3                     259 _balls_get_first_active::
   00F3 DD E5         [15]  260 	push	ix
   00F5 DD 21 00 00   [14]  261 	ld	ix,#0
   00F9 DD 39         [15]  262 	add	ix,sp
   00FB F5            [11]  263 	push	af
                            264 ;src/balls.c:95: Ball *ball = all_balls;
   00FC DD 36 FEr00   [19]  265 	ld	-2 (ix), #<(_all_balls)
   0100 DD 36 FFs00   [19]  266 	ld	-1 (ix), #>(_all_balls)
                            267 ;src/balls.c:96: for (u8 i = 0; i < MAX_BALLS; i++)
   0104 E1            [10]  268 	pop	hl
   0105 E5            [11]  269 	push	hl
   0106 0E 00         [ 7]  270 	ld	c, #0x00
   0108                     271 00105$:
   0108 79            [ 4]  272 	ld	a, c
   0109 D6 03         [ 7]  273 	sub	a, #0x03
   010B 30 12         [12]  274 	jr	NC,00103$
                            275 ;src/balls.c:98: if (ball->active)
   010D 7E            [ 7]  276 	ld	a, (hl)
   010E B7            [ 4]  277 	or	a, a
   010F 28 04         [12]  278 	jr	Z,00102$
                            279 ;src/balls.c:100: return ball;
   0111 E1            [10]  280 	pop	hl
   0112 E5            [11]  281 	push	hl
   0113 18 0D         [12]  282 	jr	00107$
   0115                     283 00102$:
                            284 ;src/balls.c:102: ball++;
   0115 11 0D 00      [10]  285 	ld	de, #0x000d
   0118 19            [11]  286 	add	hl, de
   0119 33            [ 6]  287 	inc	sp
   011A 33            [ 6]  288 	inc	sp
   011B E5            [11]  289 	push	hl
                            290 ;src/balls.c:96: for (u8 i = 0; i < MAX_BALLS; i++)
   011C 0C            [ 4]  291 	inc	c
   011D 18 E9         [12]  292 	jr	00105$
   011F                     293 00103$:
                            294 ;src/balls.c:104: return NULL;
   011F 21 00 00      [10]  295 	ld	hl, #0x0000
   0122                     296 00107$:
   0122 DD F9         [10]  297 	ld	sp, ix
   0124 DD E1         [14]  298 	pop	ix
   0126 C9            [10]  299 	ret
                            300 ;src/balls.c:111: void initialize_balls()
                            301 ;	---------------------------------
                            302 ; Function initialize_balls
                            303 ; ---------------------------------
   0127                     304 _initialize_balls::
                            305 ;src/balls.c:114: for (u8 i = 0; i < MAX_BALLS; i++)
   0127 0E 00         [ 7]  306 	ld	c, #0x00
   0129                     307 00103$:
   0129 79            [ 4]  308 	ld	a, c
   012A D6 03         [ 7]  309 	sub	a, #0x03
   012C 30 44         [12]  310 	jr	NC,00101$
                            311 ;src/balls.c:116: all_balls[i].active = 0;
   012E 06 00         [ 7]  312 	ld	b,#0x00
   0130 69            [ 4]  313 	ld	l, c
   0131 60            [ 4]  314 	ld	h, b
   0132 29            [11]  315 	add	hl, hl
   0133 09            [11]  316 	add	hl, bc
   0134 29            [11]  317 	add	hl, hl
   0135 29            [11]  318 	add	hl, hl
   0136 09            [11]  319 	add	hl, bc
   0137 EB            [ 4]  320 	ex	de,hl
   0138 21r00r00      [10]  321 	ld	hl, #_all_balls
   013B 19            [11]  322 	add	hl,de
   013C EB            [ 4]  323 	ex	de,hl
   013D AF            [ 4]  324 	xor	a, a
   013E 12            [ 7]  325 	ld	(de), a
                            326 ;src/balls.c:117: all_balls[i].x = 0;
   013F 6B            [ 4]  327 	ld	l, e
   0140 62            [ 4]  328 	ld	h, d
   0141 23            [ 6]  329 	inc	hl
   0142 AF            [ 4]  330 	xor	a, a
   0143 77            [ 7]  331 	ld	(hl), a
   0144 23            [ 6]  332 	inc	hl
   0145 77            [ 7]  333 	ld	(hl), a
                            334 ;src/balls.c:118: all_balls[i].y = 0;
   0146 6B            [ 4]  335 	ld	l, e
   0147 62            [ 4]  336 	ld	h, d
   0148 23            [ 6]  337 	inc	hl
   0149 23            [ 6]  338 	inc	hl
   014A 23            [ 6]  339 	inc	hl
   014B AF            [ 4]  340 	xor	a, a
   014C 77            [ 7]  341 	ld	(hl), a
   014D 23            [ 6]  342 	inc	hl
   014E 77            [ 7]  343 	ld	(hl), a
                            344 ;src/balls.c:119: all_balls[i].prev_x = 0;
   014F 21 05 00      [10]  345 	ld	hl, #0x0005
   0152 19            [11]  346 	add	hl, de
   0153 AF            [ 4]  347 	xor	a, a
   0154 77            [ 7]  348 	ld	(hl), a
   0155 23            [ 6]  349 	inc	hl
   0156 77            [ 7]  350 	ld	(hl), a
                            351 ;src/balls.c:120: all_balls[i].prev_y = 0;
   0157 21 07 00      [10]  352 	ld	hl, #0x0007
   015A 19            [11]  353 	add	hl, de
   015B AF            [ 4]  354 	xor	a, a
   015C 77            [ 7]  355 	ld	(hl), a
   015D 23            [ 6]  356 	inc	hl
   015E 77            [ 7]  357 	ld	(hl), a
                            358 ;src/balls.c:121: all_balls[i].dx = 0;
   015F 21 09 00      [10]  359 	ld	hl, #0x0009
   0162 19            [11]  360 	add	hl, de
   0163 AF            [ 4]  361 	xor	a, a
   0164 77            [ 7]  362 	ld	(hl), a
   0165 23            [ 6]  363 	inc	hl
   0166 77            [ 7]  364 	ld	(hl), a
                            365 ;src/balls.c:122: all_balls[i].dy = 0;
   0167 21 0B 00      [10]  366 	ld	hl, #0x000b
   016A 19            [11]  367 	add	hl, de
   016B AF            [ 4]  368 	xor	a, a
   016C 77            [ 7]  369 	ld	(hl), a
   016D 23            [ 6]  370 	inc	hl
   016E 77            [ 7]  371 	ld	(hl), a
                            372 ;src/balls.c:114: for (u8 i = 0; i < MAX_BALLS; i++)
   016F 0C            [ 4]  373 	inc	c
   0170 18 B7         [12]  374 	jr	00103$
   0172                     375 00101$:
                            376 ;src/balls.c:126: all_balls[0].active = 1;
   0172 21r00r00      [10]  377 	ld	hl, #_all_balls
   0175 36 01         [10]  378 	ld	(hl), #0x01
   0177 C9            [10]  379 	ret
                            380 ;src/balls.c:129: void center_ball(Ball *ball)
                            381 ;	---------------------------------
                            382 ; Function center_ball
                            383 ; ---------------------------------
   0178                     384 _center_ball::
   0178 DD E5         [15]  385 	push	ix
   017A DD 21 00 00   [14]  386 	ld	ix,#0
   017E DD 39         [15]  387 	add	ix,sp
   0180 F5            [11]  388 	push	af
                            389 ;src/balls.c:132: ball->prev_x = ball->x;
   0181 DD 5E 04      [19]  390 	ld	e,4 (ix)
   0184 DD 56 05      [19]  391 	ld	d,5 (ix)
   0187 FD 21 05 00   [14]  392 	ld	iy, #0x0005
   018B FD 19         [15]  393 	add	iy, de
   018D 4B            [ 4]  394 	ld	c, e
   018E 42            [ 4]  395 	ld	b, d
   018F 03            [ 6]  396 	inc	bc
   0190 69            [ 4]  397 	ld	l, c
   0191 60            [ 4]  398 	ld	h, b
   0192 7E            [ 7]  399 	ld	a, (hl)
   0193 23            [ 6]  400 	inc	hl
   0194 66            [ 7]  401 	ld	h, (hl)
   0195 FD 77 00      [19]  402 	ld	0 (iy), a
   0198 FD 74 01      [19]  403 	ld	1 (iy), h
                            404 ;src/balls.c:133: ball->prev_y = ball->y;
   019B FD 21 07 00   [14]  405 	ld	iy, #0x0007
   019F FD 19         [15]  406 	add	iy, de
   01A1 13            [ 6]  407 	inc	de
   01A2 13            [ 6]  408 	inc	de
   01A3 13            [ 6]  409 	inc	de
   01A4 33            [ 6]  410 	inc	sp
   01A5 33            [ 6]  411 	inc	sp
   01A6 D5            [11]  412 	push	de
   01A7 E1            [10]  413 	pop	hl
   01A8 E5            [11]  414 	push	hl
   01A9 5E            [ 7]  415 	ld	e, (hl)
   01AA 23            [ 6]  416 	inc	hl
   01AB 56            [ 7]  417 	ld	d, (hl)
   01AC FD 73 00      [19]  418 	ld	0 (iy), e
   01AF FD 72 01      [19]  419 	ld	1 (iy), d
                            420 ;src/balls.c:136: ball->x = batX + (batW / 4);
   01B2 21r00r00      [10]  421 	ld	hl,#_batX + 0
   01B5 5E            [ 7]  422 	ld	e, (hl)
   01B6 16 00         [ 7]  423 	ld	d, #0x00
   01B8 FD 21r00r00   [14]  424 	ld	iy, #_batW
   01BC FD 6E 00      [19]  425 	ld	l, 0 (iy)
   01BF CB 3D         [ 8]  426 	srl	l
   01C1 CB 3D         [ 8]  427 	srl	l
   01C3 26 00         [ 7]  428 	ld	h, #0x00
   01C5 19            [11]  429 	add	hl,de
   01C6 EB            [ 4]  430 	ex	de,hl
   01C7 7B            [ 4]  431 	ld	a, e
   01C8 02            [ 7]  432 	ld	(bc), a
   01C9 03            [ 6]  433 	inc	bc
   01CA 7A            [ 4]  434 	ld	a, d
   01CB 02            [ 7]  435 	ld	(bc), a
                            436 ;src/balls.c:137: ball->y = batY - SP_BALL_H;
   01CC 3Ar00r00      [13]  437 	ld	a,(#_batY + 0)
   01CF 06 00         [ 7]  438 	ld	b, #0x00
   01D1 C6 FA         [ 7]  439 	add	a, #0xfa
   01D3 4F            [ 4]  440 	ld	c, a
   01D4 78            [ 4]  441 	ld	a, b
   01D5 CE FF         [ 7]  442 	adc	a, #0xff
   01D7 47            [ 4]  443 	ld	b, a
   01D8 E1            [10]  444 	pop	hl
   01D9 E5            [11]  445 	push	hl
   01DA 71            [ 7]  446 	ld	(hl), c
   01DB 23            [ 6]  447 	inc	hl
   01DC 70            [ 7]  448 	ld	(hl), b
   01DD DD F9         [10]  449 	ld	sp, ix
   01DF DD E1         [14]  450 	pop	ix
   01E1 C9            [10]  451 	ret
                            452 ;src/balls.c:140: void handle_serve(Ball *ball)
                            453 ;	---------------------------------
                            454 ; Function handle_serve
                            455 ; ---------------------------------
   01E2                     456 _handle_serve::
   01E2 DD E5         [15]  457 	push	ix
   01E4 DD 21 00 00   [14]  458 	ld	ix,#0
   01E8 DD 39         [15]  459 	add	ix,sp
                            460 ;src/balls.c:143: serving = 0;
   01EA 21r27r00      [10]  461 	ld	hl,#_serving + 0
   01ED 36 00         [10]  462 	ld	(hl), #0x00
                            463 ;src/balls.c:146: ball->dx = 1;
   01EF DD 5E 04      [19]  464 	ld	e,4 (ix)
   01F2 DD 56 05      [19]  465 	ld	d,5 (ix)
   01F5 21 09 00      [10]  466 	ld	hl, #0x0009
   01F8 19            [11]  467 	add	hl, de
   01F9 36 01         [10]  468 	ld	(hl), #0x01
   01FB 23            [ 6]  469 	inc	hl
   01FC 36 00         [10]  470 	ld	(hl), #0x00
                            471 ;src/balls.c:147: ball->dy = -2;
   01FE 21 0B 00      [10]  472 	ld	hl, #0x000b
   0201 19            [11]  473 	add	hl, de
   0202 36 FE         [10]  474 	ld	(hl), #0xfe
   0204 23            [ 6]  475 	inc	hl
   0205 36 FF         [10]  476 	ld	(hl), #0xff
                            477 ;src/balls.c:150: ball->prev_x = ball->x;
   0207 FD 21 05 00   [14]  478 	ld	iy, #0x0005
   020B FD 19         [15]  479 	add	iy, de
   020D 6B            [ 4]  480 	ld	l, e
   020E 62            [ 4]  481 	ld	h, d
   020F 23            [ 6]  482 	inc	hl
   0210 4E            [ 7]  483 	ld	c, (hl)
   0211 23            [ 6]  484 	inc	hl
   0212 46            [ 7]  485 	ld	b, (hl)
   0213 FD 71 00      [19]  486 	ld	0 (iy), c
   0216 FD 70 01      [19]  487 	ld	1 (iy), b
                            488 ;src/balls.c:151: ball->prev_y = ball->y;
   0219 21 07 00      [10]  489 	ld	hl, #0x0007
   021C 19            [11]  490 	add	hl,de
   021D 4D            [ 4]  491 	ld	c, l
   021E 44            [ 4]  492 	ld	b, h
   021F EB            [ 4]  493 	ex	de,hl
   0220 23            [ 6]  494 	inc	hl
   0221 23            [ 6]  495 	inc	hl
   0222 23            [ 6]  496 	inc	hl
   0223 5E            [ 7]  497 	ld	e, (hl)
   0224 23            [ 6]  498 	inc	hl
   0225 56            [ 7]  499 	ld	d, (hl)
   0226 7B            [ 4]  500 	ld	a, e
   0227 02            [ 7]  501 	ld	(bc), a
   0228 03            [ 6]  502 	inc	bc
   0229 7A            [ 4]  503 	ld	a, d
   022A 02            [ 7]  504 	ld	(bc), a
   022B DD E1         [14]  505 	pop	ix
   022D C9            [10]  506 	ret
                            507 ;src/balls.c:154: void update_ball(Ball *ball)
                            508 ;	---------------------------------
                            509 ; Function update_ball
                            510 ; ---------------------------------
   022E                     511 _update_ball::
   022E DD E5         [15]  512 	push	ix
   0230 DD 21 00 00   [14]  513 	ld	ix,#0
   0234 DD 39         [15]  514 	add	ix,sp
   0236 21 F5 FF      [10]  515 	ld	hl, #-11
   0239 39            [11]  516 	add	hl, sp
   023A F9            [ 6]  517 	ld	sp, hl
                            518 ;src/balls.c:156: ball->prev_x = ball->x;
   023B DD 4E 04      [19]  519 	ld	c,4 (ix)
   023E DD 46 05      [19]  520 	ld	b,5 (ix)
   0241 FD 21 05 00   [14]  521 	ld	iy, #0x0005
   0245 FD 09         [15]  522 	add	iy, bc
   0247 21 01 00      [10]  523 	ld	hl, #0x0001
   024A 09            [11]  524 	add	hl,bc
   024B DD 75 F9      [19]  525 	ld	-7 (ix), l
   024E DD 74 FA      [19]  526 	ld	-6 (ix), h
   0251 5E            [ 7]  527 	ld	e, (hl)
   0252 23            [ 6]  528 	inc	hl
   0253 56            [ 7]  529 	ld	d, (hl)
   0254 FD 73 00      [19]  530 	ld	0 (iy), e
   0257 FD 72 01      [19]  531 	ld	1 (iy), d
                            532 ;src/balls.c:157: ball->prev_y = ball->y;
   025A FD 21 07 00   [14]  533 	ld	iy, #0x0007
   025E FD 09         [15]  534 	add	iy, bc
   0260 21 03 00      [10]  535 	ld	hl, #0x0003
   0263 09            [11]  536 	add	hl,bc
   0264 DD 75 F7      [19]  537 	ld	-9 (ix), l
   0267 DD 74 F8      [19]  538 	ld	-8 (ix), h
   026A 5E            [ 7]  539 	ld	e, (hl)
   026B 23            [ 6]  540 	inc	hl
   026C 56            [ 7]  541 	ld	d, (hl)
   026D FD 73 00      [19]  542 	ld	0 (iy), e
   0270 FD 72 01      [19]  543 	ld	1 (iy), d
                            544 ;src/balls.c:159: if (ball->active)
   0273 0A            [ 7]  545 	ld	a, (bc)
   0274 B7            [ 4]  546 	or	a, a
   0275 CAr68r03      [10]  547 	jp	Z, 00111$
                            548 ;src/balls.c:162: i16 new_x = ball->x + ball->dx;
   0278 DD 6E F9      [19]  549 	ld	l,-7 (ix)
   027B DD 66 FA      [19]  550 	ld	h,-6 (ix)
   027E 5E            [ 7]  551 	ld	e, (hl)
   027F 23            [ 6]  552 	inc	hl
   0280 56            [ 7]  553 	ld	d, (hl)
   0281 21 09 00      [10]  554 	ld	hl, #0x0009
   0284 09            [11]  555 	add	hl,bc
   0285 DD 75 FE      [19]  556 	ld	-2 (ix), l
   0288 DD 74 FF      [19]  557 	ld	-1 (ix), h
   028B 7E            [ 7]  558 	ld	a, (hl)
   028C 23            [ 6]  559 	inc	hl
   028D 66            [ 7]  560 	ld	h, (hl)
   028E 6F            [ 4]  561 	ld	l, a
   028F 19            [11]  562 	add	hl, de
   0290 33            [ 6]  563 	inc	sp
   0291 33            [ 6]  564 	inc	sp
   0292 E5            [11]  565 	push	hl
                            566 ;src/balls.c:163: i16 new_y = ball->y + ball->dy;
   0293 DD 6E F7      [19]  567 	ld	l,-9 (ix)
   0296 DD 66 F8      [19]  568 	ld	h,-8 (ix)
   0299 5E            [ 7]  569 	ld	e, (hl)
   029A 23            [ 6]  570 	inc	hl
   029B 56            [ 7]  571 	ld	d, (hl)
   029C 21 0B 00      [10]  572 	ld	hl, #0x000b
   029F 09            [11]  573 	add	hl,bc
   02A0 DD 75 FC      [19]  574 	ld	-4 (ix), l
   02A3 DD 74 FD      [19]  575 	ld	-3 (ix), h
   02A6 7E            [ 7]  576 	ld	a, (hl)
   02A7 23            [ 6]  577 	inc	hl
   02A8 66            [ 7]  578 	ld	h, (hl)
   02A9 6F            [ 4]  579 	ld	l, a
   02AA 19            [11]  580 	add	hl,de
   02AB EB            [ 4]  581 	ex	de,hl
                            582 ;src/balls.c:165: if (new_y >= YOUR_DEAD_Y)
   02AC 7B            [ 4]  583 	ld	a, e
   02AD D6 BA         [ 7]  584 	sub	a, #0xba
   02AF 7A            [ 4]  585 	ld	a, d
   02B0 17            [ 4]  586 	rla
   02B1 3F            [ 4]  587 	ccf
   02B2 1F            [ 4]  588 	rra
   02B3 DE 80         [ 7]  589 	sbc	a, #0x80
   02B5 38 0F         [12]  590 	jr	C,00102$
                            591 ;src/balls.c:168: ball->active = 0;
   02B7 AF            [ 4]  592 	xor	a, a
   02B8 02            [ 7]  593 	ld	(bc), a
                            594 ;src/balls.c:169: ball->dy = 0;
   02B9 DD 6E FC      [19]  595 	ld	l,-4 (ix)
   02BC DD 66 FD      [19]  596 	ld	h,-3 (ix)
   02BF AF            [ 4]  597 	xor	a, a
   02C0 77            [ 7]  598 	ld	(hl), a
   02C1 23            [ 6]  599 	inc	hl
   02C2 77            [ 7]  600 	ld	(hl), a
                            601 ;src/balls.c:170: return;
   02C3 C3r68r03      [10]  602 	jp	00111$
   02C6                     603 00102$:
                            604 ;src/balls.c:173: hits |= background_bounce_ball(new_x, new_y);
   02C6 C5            [11]  605 	push	bc
   02C7 D5            [11]  606 	push	de
   02C8 D5            [11]  607 	push	de
   02C9 DD 6E F5      [19]  608 	ld	l,-11 (ix)
   02CC DD 66 F6      [19]  609 	ld	h,-10 (ix)
   02CF E5            [11]  610 	push	hl
   02D0 CDr00r00      [17]  611 	call	_background_bounce_ball
   02D3 F1            [10]  612 	pop	af
   02D4 F1            [10]  613 	pop	af
   02D5 D1            [10]  614 	pop	de
   02D6 C1            [10]  615 	pop	bc
   02D7 DD 75 FB      [19]  616 	ld	-5 (ix), l
                            617 ;src/balls.c:174: hits |= bat_bounce_ball(ball, new_x, new_y);
   02DA D5            [11]  618 	push	de
   02DB D5            [11]  619 	push	de
   02DC DD 6E F5      [19]  620 	ld	l,-11 (ix)
   02DF DD 66 F6      [19]  621 	ld	h,-10 (ix)
   02E2 E5            [11]  622 	push	hl
   02E3 C5            [11]  623 	push	bc
   02E4 CDr00r00      [17]  624 	call	_bat_bounce_ball
   02E7 F1            [10]  625 	pop	af
   02E8 F1            [10]  626 	pop	af
   02E9 F1            [10]  627 	pop	af
   02EA D1            [10]  628 	pop	de
   02EB DD 7E FB      [19]  629 	ld	a, -5 (ix)
   02EE B5            [ 4]  630 	or	a, l
   02EF 4F            [ 4]  631 	ld	c, a
                            632 ;src/balls.c:175: hits |= blocks_bounce_ball(ball, new_x, new_y);
   02F0 C5            [11]  633 	push	bc
   02F1 D5            [11]  634 	push	de
   02F2 D5            [11]  635 	push	de
   02F3 DD 6E F5      [19]  636 	ld	l,-11 (ix)
   02F6 DD 66 F6      [19]  637 	ld	h,-10 (ix)
   02F9 E5            [11]  638 	push	hl
   02FA DD 6E 04      [19]  639 	ld	l,4 (ix)
   02FD DD 66 05      [19]  640 	ld	h,5 (ix)
   0300 E5            [11]  641 	push	hl
   0301 CDr00r00      [17]  642 	call	_blocks_bounce_ball
   0304 F1            [10]  643 	pop	af
   0305 F1            [10]  644 	pop	af
   0306 F1            [10]  645 	pop	af
   0307 D1            [10]  646 	pop	de
   0308 C1            [10]  647 	pop	bc
   0309 79            [ 4]  648 	ld	a, c
   030A B5            [ 4]  649 	or	a, l
   030B DD 77 FB      [19]  650 	ld	-5 (ix), a
                            651 ;src/balls.c:177: if (hits & BOUNCE_X)
   030E DD CB FB 46   [20]  652 	bit	0, -5 (ix)
   0312 28 1B         [12]  653 	jr	Z,00104$
                            654 ;src/balls.c:179: ball->dx = -ball->dx;
   0314 DD 6E FE      [19]  655 	ld	l,-2 (ix)
   0317 DD 66 FF      [19]  656 	ld	h,-1 (ix)
   031A 4E            [ 7]  657 	ld	c, (hl)
   031B 23            [ 6]  658 	inc	hl
   031C 46            [ 7]  659 	ld	b, (hl)
   031D AF            [ 4]  660 	xor	a, a
   031E 91            [ 4]  661 	sub	a, c
   031F 4F            [ 4]  662 	ld	c, a
   0320 3E 00         [ 7]  663 	ld	a, #0x00
   0322 98            [ 4]  664 	sbc	a, b
   0323 47            [ 4]  665 	ld	b, a
   0324 DD 6E FE      [19]  666 	ld	l,-2 (ix)
   0327 DD 66 FF      [19]  667 	ld	h,-1 (ix)
   032A 71            [ 7]  668 	ld	(hl), c
   032B 23            [ 6]  669 	inc	hl
   032C 70            [ 7]  670 	ld	(hl), b
   032D 18 0F         [12]  671 	jr	00105$
   032F                     672 00104$:
                            673 ;src/balls.c:183: ball->x = new_x;
   032F DD 6E F9      [19]  674 	ld	l,-7 (ix)
   0332 DD 66 FA      [19]  675 	ld	h,-6 (ix)
   0335 DD 7E F5      [19]  676 	ld	a, -11 (ix)
   0338 77            [ 7]  677 	ld	(hl), a
   0339 23            [ 6]  678 	inc	hl
   033A DD 7E F6      [19]  679 	ld	a, -10 (ix)
   033D 77            [ 7]  680 	ld	(hl), a
   033E                     681 00105$:
                            682 ;src/balls.c:186: if (hits & BOUNCE_Y)
   033E DD CB FB 4E   [20]  683 	bit	1, -5 (ix)
   0342 28 1B         [12]  684 	jr	Z,00107$
                            685 ;src/balls.c:188: ball->dy = -ball->dy;
   0344 DD 6E FC      [19]  686 	ld	l,-4 (ix)
   0347 DD 66 FD      [19]  687 	ld	h,-3 (ix)
   034A 4E            [ 7]  688 	ld	c, (hl)
   034B 23            [ 6]  689 	inc	hl
   034C 46            [ 7]  690 	ld	b, (hl)
   034D AF            [ 4]  691 	xor	a, a
   034E 91            [ 4]  692 	sub	a, c
   034F 4F            [ 4]  693 	ld	c, a
   0350 3E 00         [ 7]  694 	ld	a, #0x00
   0352 98            [ 4]  695 	sbc	a, b
   0353 47            [ 4]  696 	ld	b, a
   0354 DD 6E FC      [19]  697 	ld	l,-4 (ix)
   0357 DD 66 FD      [19]  698 	ld	h,-3 (ix)
   035A 71            [ 7]  699 	ld	(hl), c
   035B 23            [ 6]  700 	inc	hl
   035C 70            [ 7]  701 	ld	(hl), b
   035D 18 09         [12]  702 	jr	00111$
   035F                     703 00107$:
                            704 ;src/balls.c:192: ball->y = new_y;
   035F DD 6E F7      [19]  705 	ld	l,-9 (ix)
   0362 DD 66 F8      [19]  706 	ld	h,-8 (ix)
   0365 73            [ 7]  707 	ld	(hl), e
   0366 23            [ 6]  708 	inc	hl
   0367 72            [ 7]  709 	ld	(hl), d
   0368                     710 00111$:
   0368 DD F9         [10]  711 	ld	sp, ix
   036A DD E1         [14]  712 	pop	ix
   036C C9            [10]  713 	ret
                            714 	.area _CODE
                            715 	.area _INITIALIZER
                            716 	.area _CABS (ABS)
