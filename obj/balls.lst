                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module balls
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _background_bounce_ball
                             12 	.globl _background_restore_world_coords
                             13 	.globl _blocks_bounce_ball
                             14 	.globl _bat_bounce_ball
                             15 	.globl _cpct_getScreenPtr
                             16 	.globl _cpct_drawSpriteMaskedAlignedTable
                             17 	.globl _serving
                             18 	.globl _all_balls
                             19 	.globl _balls_initialize
                             20 	.globl _balls_update
                             21 	.globl _balls_restore_background
                             22 	.globl _balls_draw
                             23 	.globl _balls_get_first_active
                             24 	.globl _initialize_balls
                             25 	.globl _center_ball
                             26 	.globl _handle_serve
                             27 	.globl _update_ball
                             28 ;--------------------------------------------------------
                             29 ; special function registers
                             30 ;--------------------------------------------------------
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _DATA
   0000                      35 _all_balls::
   0000                      36 	.ds 39
   0027                      37 _serving::
   0027                      38 	.ds 1
                             39 ;--------------------------------------------------------
                             40 ; ram data
                             41 ;--------------------------------------------------------
                             42 	.area _INITIALIZED
                             43 ;--------------------------------------------------------
                             44 ; absolute external ram data
                             45 ;--------------------------------------------------------
                             46 	.area _DABS (ABS)
                             47 ;--------------------------------------------------------
                             48 ; global & static initialisations
                             49 ;--------------------------------------------------------
                             50 	.area _HOME
                             51 	.area _GSINIT
                             52 	.area _GSFINAL
                             53 	.area _GSINIT
                             54 ;--------------------------------------------------------
                             55 ; Home
                             56 ;--------------------------------------------------------
                             57 	.area _HOME
                             58 	.area _HOME
                             59 ;--------------------------------------------------------
                             60 ; code
                             61 ;--------------------------------------------------------
                             62 	.area _CODE
                             63 ;src/balls.c:32: void balls_initialize()
                             64 ;	---------------------------------
                             65 ; Function balls_initialize
                             66 ; ---------------------------------
   0000                      67 _balls_initialize::
                             68 ;src/balls.c:35: serving = 1;
   0000 21r27r00      [10]   69 	ld	hl,#_serving + 0
   0003 36 01         [10]   70 	ld	(hl), #0x01
                             71 ;src/balls.c:37: initialize_balls();
   0005 CDr2Br01      [17]   72 	call	_initialize_balls
                             73 ;src/balls.c:40: center_ball(all_balls);
   0008 21r00r00      [10]   74 	ld	hl, #_all_balls
   000B E5            [11]   75 	push	hl
   000C CDr7Cr01      [17]   76 	call	_center_ball
   000F F1            [10]   77 	pop	af
   0010 C9            [10]   78 	ret
                             79 ;src/balls.c:43: void balls_update()
                             80 ;	---------------------------------
                             81 ; Function balls_update
                             82 ; ---------------------------------
   0011                      83 _balls_update::
                             84 ;src/balls.c:45: Ball *ball = all_balls;
   0011 01r00r00      [10]   85 	ld	bc, #_all_balls+0
                             86 ;src/balls.c:46: if (serving)
   0014 3Ar27r00      [13]   87 	ld	a,(#_serving + 0)
   0017 B7            [ 4]   88 	or	a, a
   0018 28 12         [12]   89 	jr	Z,00115$
                             90 ;src/balls.c:48: center_ball(ball);
   001A C5            [11]   91 	push	bc
   001B C5            [11]   92 	push	bc
   001C CDr7Cr01      [17]   93 	call	_center_ball
   001F F1            [10]   94 	pop	af
   0020 C1            [10]   95 	pop	bc
                             96 ;src/balls.c:49: if (key_serve_is_pressed)
   0021 3Ar00r00      [13]   97 	ld	a,(#_key_serve_is_pressed + 0)
   0024 B7            [ 4]   98 	or	a, a
   0025 C8            [11]   99 	ret	Z
                            100 ;src/balls.c:51: handle_serve(ball);
   0026 C5            [11]  101 	push	bc
   0027 CDrE8r01      [17]  102 	call	_handle_serve
   002A F1            [10]  103 	pop	af
   002B C9            [10]  104 	ret
                            105 ;src/balls.c:56: for (u8 i = 0; i < MAX_BALLS; i++)
   002C                     106 00115$:
   002C 1E 00         [ 7]  107 	ld	e, #0x00
   002E                     108 00108$:
   002E 7B            [ 4]  109 	ld	a, e
   002F D6 03         [ 7]  110 	sub	a, #0x03
   0031 D0            [11]  111 	ret	NC
                            112 ;src/balls.c:58: update_ball(ball);
   0032 C5            [11]  113 	push	bc
   0033 D5            [11]  114 	push	de
   0034 C5            [11]  115 	push	bc
   0035 CDr34r02      [17]  116 	call	_update_ball
   0038 F1            [10]  117 	pop	af
   0039 D1            [10]  118 	pop	de
   003A C1            [10]  119 	pop	bc
                            120 ;src/balls.c:59: ball++;
   003B 21 0D 00      [10]  121 	ld	hl, #0x000d
   003E 09            [11]  122 	add	hl,bc
   003F 4D            [ 4]  123 	ld	c, l
   0040 44            [ 4]  124 	ld	b, h
                            125 ;src/balls.c:56: for (u8 i = 0; i < MAX_BALLS; i++)
   0041 1C            [ 4]  126 	inc	e
   0042 18 EA         [12]  127 	jr	00108$
                            128 ;src/balls.c:64: void balls_restore_background()
                            129 ;	---------------------------------
                            130 ; Function balls_restore_background
                            131 ; ---------------------------------
   0044                     132 _balls_restore_background::
   0044 DD E5         [15]  133 	push	ix
   0046 DD 21 00 00   [14]  134 	ld	ix,#0
   004A DD 39         [15]  135 	add	ix,sp
   004C F5            [11]  136 	push	af
   004D 3B            [ 6]  137 	dec	sp
                            138 ;src/balls.c:66: Ball *ball = all_balls;
   004E 01r00r00      [10]  139 	ld	bc, #_all_balls+0
                            140 ;src/balls.c:67: for (u8 i = 0; i < MAX_BALLS; i++)
   0051 DD 36 FD 00   [19]  141 	ld	-3 (ix), #0x00
   0055                     142 00105$:
   0055 DD 7E FD      [19]  143 	ld	a, -3 (ix)
   0058 D6 03         [ 7]  144 	sub	a, #0x03
   005A 30 3D         [12]  145 	jr	NC,00107$
                            146 ;src/balls.c:69: if (ball->active)
   005C 0A            [ 7]  147 	ld	a, (bc)
   005D B7            [ 4]  148 	or	a, a
   005E 28 2E         [12]  149 	jr	Z,00102$
                            150 ;src/balls.c:71: background_restore_world_coords(ball->prev_x, ball->prev_y, SP_BALL_W, SP_BALL_H);
   0060 69            [ 4]  151 	ld	l, c
   0061 60            [ 4]  152 	ld	h, b
   0062 11 07 00      [10]  153 	ld	de, #0x0007
   0065 19            [11]  154 	add	hl, de
   0066 5E            [ 7]  155 	ld	e, (hl)
   0067 23            [ 6]  156 	inc	hl
   0068 56            [ 7]  157 	ld	d, (hl)
   0069 C5            [11]  158 	push	bc
   006A FD E1         [14]  159 	pop	iy
   006C FD 7E 05      [19]  160 	ld	a, 5 (iy)
   006F DD 77 FE      [19]  161 	ld	-2 (ix), a
   0072 FD 7E 06      [19]  162 	ld	a, 6 (iy)
   0075 DD 77 FF      [19]  163 	ld	-1 (ix), a
   0078 C5            [11]  164 	push	bc
   0079 21 03 06      [10]  165 	ld	hl, #0x0603
   007C E5            [11]  166 	push	hl
   007D D5            [11]  167 	push	de
   007E DD 6E FE      [19]  168 	ld	l,-2 (ix)
   0081 DD 66 FF      [19]  169 	ld	h,-1 (ix)
   0084 E5            [11]  170 	push	hl
   0085 CDr00r00      [17]  171 	call	_background_restore_world_coords
   0088 21 06 00      [10]  172 	ld	hl, #6
   008B 39            [11]  173 	add	hl, sp
   008C F9            [ 6]  174 	ld	sp, hl
   008D C1            [10]  175 	pop	bc
   008E                     176 00102$:
                            177 ;src/balls.c:73: ball++;
   008E 21 0D 00      [10]  178 	ld	hl, #0x000d
   0091 09            [11]  179 	add	hl,bc
   0092 4D            [ 4]  180 	ld	c, l
   0093 44            [ 4]  181 	ld	b, h
                            182 ;src/balls.c:67: for (u8 i = 0; i < MAX_BALLS; i++)
   0094 DD 34 FD      [23]  183 	inc	-3 (ix)
   0097 18 BC         [12]  184 	jr	00105$
   0099                     185 00107$:
   0099 DD F9         [10]  186 	ld	sp, ix
   009B DD E1         [14]  187 	pop	ix
   009D C9            [10]  188 	ret
                            189 ;src/balls.c:77: void balls_draw()
                            190 ;	---------------------------------
                            191 ; Function balls_draw
                            192 ; ---------------------------------
   009E                     193 _balls_draw::
   009E DD E5         [15]  194 	push	ix
   00A0 DD 21 00 00   [14]  195 	ld	ix,#0
   00A4 DD 39         [15]  196 	add	ix,sp
   00A6 3B            [ 6]  197 	dec	sp
                            198 ;src/balls.c:80: Ball *ball = all_balls;
   00A7 01r00r00      [10]  199 	ld	bc, #_all_balls+0
                            200 ;src/balls.c:81: for (u8 i = 0; i < MAX_BALLS; i++)
   00AA DD 36 FF 00   [19]  201 	ld	-1 (ix), #0x00
   00AE                     202 00105$:
   00AE DD 7E FF      [19]  203 	ld	a, -1 (ix)
   00B1 D6 03         [ 7]  204 	sub	a, #0x03
   00B3 30 3E         [12]  205 	jr	NC,00107$
                            206 ;src/balls.c:83: if (ball->active)
   00B5 0A            [ 7]  207 	ld	a, (bc)
   00B6 B7            [ 4]  208 	or	a, a
   00B7 28 35         [12]  209 	jr	Z,00106$
                            210 ;src/balls.c:85: svmem = cpct_getScreenPtr(CPCT_VMEM_START, W_2_S_X(ball->x), W_2_S_Y(ball->y));
   00B9 69            [ 4]  211 	ld	l, c
   00BA 60            [ 4]  212 	ld	h, b
   00BB 23            [ 6]  213 	inc	hl
   00BC 23            [ 6]  214 	inc	hl
   00BD 23            [ 6]  215 	inc	hl
   00BE 5E            [ 7]  216 	ld	e, (hl)
   00BF 23            [ 6]  217 	inc	hl
   00C0 56            [ 7]  218 	ld	d, (hl)
   00C1 7B            [ 4]  219 	ld	a, e
   00C2 C6 08         [ 7]  220 	add	a, #0x08
   00C4 57            [ 4]  221 	ld	d, a
   00C5 69            [ 4]  222 	ld	l, c
   00C6 60            [ 4]  223 	ld	h, b
   00C7 23            [ 6]  224 	inc	hl
   00C8 7E            [ 7]  225 	ld	a, (hl)
   00C9 23            [ 6]  226 	inc	hl
   00CA 66            [ 7]  227 	ld	h, (hl)
   00CB C6 0C         [ 7]  228 	add	a, #0x0c
   00CD C5            [11]  229 	push	bc
   00CE 5F            [ 4]  230 	ld	e, a
   00CF D5            [11]  231 	push	de
   00D0 21 00 C0      [10]  232 	ld	hl, #0xc000
   00D3 E5            [11]  233 	push	hl
   00D4 CDr00r00      [17]  234 	call	_cpct_getScreenPtr
   00D7 11r00r00      [10]  235 	ld	de, #_g_masktable
   00DA D5            [11]  236 	push	de
   00DB 11 03 06      [10]  237 	ld	de, #0x0603
   00DE D5            [11]  238 	push	de
   00DF E5            [11]  239 	push	hl
   00E0 21r00r00      [10]  240 	ld	hl, #_sp_ball
   00E3 E5            [11]  241 	push	hl
   00E4 CDr00r00      [17]  242 	call	_cpct_drawSpriteMaskedAlignedTable
   00E7 C1            [10]  243 	pop	bc
                            244 ;src/balls.c:90: ball++;
   00E8 21 0D 00      [10]  245 	ld	hl, #0x000d
   00EB 09            [11]  246 	add	hl,bc
   00EC 4D            [ 4]  247 	ld	c, l
   00ED 44            [ 4]  248 	ld	b, h
   00EE                     249 00106$:
                            250 ;src/balls.c:81: for (u8 i = 0; i < MAX_BALLS; i++)
   00EE DD 34 FF      [23]  251 	inc	-1 (ix)
   00F1 18 BB         [12]  252 	jr	00105$
   00F3                     253 00107$:
   00F3 33            [ 6]  254 	inc	sp
   00F4 DD E1         [14]  255 	pop	ix
   00F6 C9            [10]  256 	ret
                            257 ;src/balls.c:95: Ball *balls_get_first_active()
                            258 ;	---------------------------------
                            259 ; Function balls_get_first_active
                            260 ; ---------------------------------
   00F7                     261 _balls_get_first_active::
   00F7 DD E5         [15]  262 	push	ix
   00F9 DD 21 00 00   [14]  263 	ld	ix,#0
   00FD DD 39         [15]  264 	add	ix,sp
   00FF F5            [11]  265 	push	af
                            266 ;src/balls.c:97: Ball *ball = all_balls;
   0100 DD 36 FEr00   [19]  267 	ld	-2 (ix), #<(_all_balls)
   0104 DD 36 FFs00   [19]  268 	ld	-1 (ix), #>(_all_balls)
                            269 ;src/balls.c:98: for (u8 i = 0; i < MAX_BALLS; i++)
   0108 E1            [10]  270 	pop	hl
   0109 E5            [11]  271 	push	hl
   010A 0E 00         [ 7]  272 	ld	c, #0x00
   010C                     273 00105$:
   010C 79            [ 4]  274 	ld	a, c
   010D D6 03         [ 7]  275 	sub	a, #0x03
   010F 30 12         [12]  276 	jr	NC,00103$
                            277 ;src/balls.c:100: if (ball->active)
   0111 7E            [ 7]  278 	ld	a, (hl)
   0112 B7            [ 4]  279 	or	a, a
   0113 28 04         [12]  280 	jr	Z,00102$
                            281 ;src/balls.c:102: return ball;
   0115 E1            [10]  282 	pop	hl
   0116 E5            [11]  283 	push	hl
   0117 18 0D         [12]  284 	jr	00107$
   0119                     285 00102$:
                            286 ;src/balls.c:104: ball++;
   0119 11 0D 00      [10]  287 	ld	de, #0x000d
   011C 19            [11]  288 	add	hl, de
   011D 33            [ 6]  289 	inc	sp
   011E 33            [ 6]  290 	inc	sp
   011F E5            [11]  291 	push	hl
                            292 ;src/balls.c:98: for (u8 i = 0; i < MAX_BALLS; i++)
   0120 0C            [ 4]  293 	inc	c
   0121 18 E9         [12]  294 	jr	00105$
   0123                     295 00103$:
                            296 ;src/balls.c:106: return NULL;
   0123 21 00 00      [10]  297 	ld	hl, #0x0000
   0126                     298 00107$:
   0126 DD F9         [10]  299 	ld	sp, ix
   0128 DD E1         [14]  300 	pop	ix
   012A C9            [10]  301 	ret
                            302 ;src/balls.c:113: void initialize_balls()
                            303 ;	---------------------------------
                            304 ; Function initialize_balls
                            305 ; ---------------------------------
   012B                     306 _initialize_balls::
                            307 ;src/balls.c:116: for (u8 i = 0; i < MAX_BALLS; i++)
   012B 0E 00         [ 7]  308 	ld	c, #0x00
   012D                     309 00103$:
   012D 79            [ 4]  310 	ld	a, c
   012E D6 03         [ 7]  311 	sub	a, #0x03
   0130 30 44         [12]  312 	jr	NC,00101$
                            313 ;src/balls.c:118: all_balls[i].active = 0;
   0132 06 00         [ 7]  314 	ld	b,#0x00
   0134 69            [ 4]  315 	ld	l, c
   0135 60            [ 4]  316 	ld	h, b
   0136 29            [11]  317 	add	hl, hl
   0137 09            [11]  318 	add	hl, bc
   0138 29            [11]  319 	add	hl, hl
   0139 29            [11]  320 	add	hl, hl
   013A 09            [11]  321 	add	hl, bc
   013B EB            [ 4]  322 	ex	de,hl
   013C 21r00r00      [10]  323 	ld	hl, #_all_balls
   013F 19            [11]  324 	add	hl,de
   0140 EB            [ 4]  325 	ex	de,hl
   0141 AF            [ 4]  326 	xor	a, a
   0142 12            [ 7]  327 	ld	(de), a
                            328 ;src/balls.c:119: all_balls[i].x = 0;
   0143 6B            [ 4]  329 	ld	l, e
   0144 62            [ 4]  330 	ld	h, d
   0145 23            [ 6]  331 	inc	hl
   0146 AF            [ 4]  332 	xor	a, a
   0147 77            [ 7]  333 	ld	(hl), a
   0148 23            [ 6]  334 	inc	hl
   0149 77            [ 7]  335 	ld	(hl), a
                            336 ;src/balls.c:120: all_balls[i].y = 0;
   014A 6B            [ 4]  337 	ld	l, e
   014B 62            [ 4]  338 	ld	h, d
   014C 23            [ 6]  339 	inc	hl
   014D 23            [ 6]  340 	inc	hl
   014E 23            [ 6]  341 	inc	hl
   014F AF            [ 4]  342 	xor	a, a
   0150 77            [ 7]  343 	ld	(hl), a
   0151 23            [ 6]  344 	inc	hl
   0152 77            [ 7]  345 	ld	(hl), a
                            346 ;src/balls.c:121: all_balls[i].prev_x = 0;
   0153 21 05 00      [10]  347 	ld	hl, #0x0005
   0156 19            [11]  348 	add	hl, de
   0157 AF            [ 4]  349 	xor	a, a
   0158 77            [ 7]  350 	ld	(hl), a
   0159 23            [ 6]  351 	inc	hl
   015A 77            [ 7]  352 	ld	(hl), a
                            353 ;src/balls.c:122: all_balls[i].prev_y = 0;
   015B 21 07 00      [10]  354 	ld	hl, #0x0007
   015E 19            [11]  355 	add	hl, de
   015F AF            [ 4]  356 	xor	a, a
   0160 77            [ 7]  357 	ld	(hl), a
   0161 23            [ 6]  358 	inc	hl
   0162 77            [ 7]  359 	ld	(hl), a
                            360 ;src/balls.c:123: all_balls[i].dx = 0;
   0163 21 09 00      [10]  361 	ld	hl, #0x0009
   0166 19            [11]  362 	add	hl, de
   0167 AF            [ 4]  363 	xor	a, a
   0168 77            [ 7]  364 	ld	(hl), a
   0169 23            [ 6]  365 	inc	hl
   016A 77            [ 7]  366 	ld	(hl), a
                            367 ;src/balls.c:124: all_balls[i].dy = 0;
   016B 21 0B 00      [10]  368 	ld	hl, #0x000b
   016E 19            [11]  369 	add	hl, de
   016F AF            [ 4]  370 	xor	a, a
   0170 77            [ 7]  371 	ld	(hl), a
   0171 23            [ 6]  372 	inc	hl
   0172 77            [ 7]  373 	ld	(hl), a
                            374 ;src/balls.c:116: for (u8 i = 0; i < MAX_BALLS; i++)
   0173 0C            [ 4]  375 	inc	c
   0174 18 B7         [12]  376 	jr	00103$
   0176                     377 00101$:
                            378 ;src/balls.c:128: all_balls[0].active = 1;
   0176 21r00r00      [10]  379 	ld	hl, #_all_balls
   0179 36 01         [10]  380 	ld	(hl), #0x01
   017B C9            [10]  381 	ret
                            382 ;src/balls.c:131: void center_ball(Ball *ball)
                            383 ;	---------------------------------
                            384 ; Function center_ball
                            385 ; ---------------------------------
   017C                     386 _center_ball::
   017C DD E5         [15]  387 	push	ix
   017E DD 21 00 00   [14]  388 	ld	ix,#0
   0182 DD 39         [15]  389 	add	ix,sp
   0184 F5            [11]  390 	push	af
                            391 ;src/balls.c:134: ball->prev_x = ball->x;
   0185 DD 5E 04      [19]  392 	ld	e,4 (ix)
   0188 DD 56 05      [19]  393 	ld	d,5 (ix)
   018B FD 21 05 00   [14]  394 	ld	iy, #0x0005
   018F FD 19         [15]  395 	add	iy, de
   0191 4B            [ 4]  396 	ld	c, e
   0192 42            [ 4]  397 	ld	b, d
   0193 03            [ 6]  398 	inc	bc
   0194 69            [ 4]  399 	ld	l, c
   0195 60            [ 4]  400 	ld	h, b
   0196 7E            [ 7]  401 	ld	a, (hl)
   0197 23            [ 6]  402 	inc	hl
   0198 66            [ 7]  403 	ld	h, (hl)
   0199 FD 77 00      [19]  404 	ld	0 (iy), a
   019C FD 74 01      [19]  405 	ld	1 (iy), h
                            406 ;src/balls.c:135: ball->prev_y = ball->y;
   019F FD 21 07 00   [14]  407 	ld	iy, #0x0007
   01A3 FD 19         [15]  408 	add	iy, de
   01A5 13            [ 6]  409 	inc	de
   01A6 13            [ 6]  410 	inc	de
   01A7 13            [ 6]  411 	inc	de
   01A8 33            [ 6]  412 	inc	sp
   01A9 33            [ 6]  413 	inc	sp
   01AA D5            [11]  414 	push	de
   01AB E1            [10]  415 	pop	hl
   01AC E5            [11]  416 	push	hl
   01AD 5E            [ 7]  417 	ld	e, (hl)
   01AE 23            [ 6]  418 	inc	hl
   01AF 56            [ 7]  419 	ld	d, (hl)
   01B0 FD 73 00      [19]  420 	ld	0 (iy), e
   01B3 FD 72 01      [19]  421 	ld	1 (iy), d
                            422 ;src/balls.c:138: ball->x = batX + (batW / 4) + 1;
   01B6 21r00r00      [10]  423 	ld	hl,#_batX + 0
   01B9 5E            [ 7]  424 	ld	e, (hl)
   01BA 16 00         [ 7]  425 	ld	d, #0x00
   01BC FD 21r00r00   [14]  426 	ld	iy, #_batW
   01C0 FD 6E 00      [19]  427 	ld	l, 0 (iy)
   01C3 CB 3D         [ 8]  428 	srl	l
   01C5 CB 3D         [ 8]  429 	srl	l
   01C7 26 00         [ 7]  430 	ld	h, #0x00
   01C9 19            [11]  431 	add	hl, de
   01CA 23            [ 6]  432 	inc	hl
   01CB 55            [ 4]  433 	ld	d, l
   01CC 5C            [ 4]  434 	ld	e, h
   01CD 7A            [ 4]  435 	ld	a, d
   01CE 02            [ 7]  436 	ld	(bc), a
   01CF 03            [ 6]  437 	inc	bc
   01D0 7B            [ 4]  438 	ld	a, e
   01D1 02            [ 7]  439 	ld	(bc), a
                            440 ;src/balls.c:139: ball->y = batY - SP_BALL_H;
   01D2 3Ar00r00      [13]  441 	ld	a,(#_batY + 0)
   01D5 06 00         [ 7]  442 	ld	b, #0x00
   01D7 C6 FA         [ 7]  443 	add	a, #0xfa
   01D9 4F            [ 4]  444 	ld	c, a
   01DA 78            [ 4]  445 	ld	a, b
   01DB CE FF         [ 7]  446 	adc	a, #0xff
   01DD 47            [ 4]  447 	ld	b, a
   01DE E1            [10]  448 	pop	hl
   01DF E5            [11]  449 	push	hl
   01E0 71            [ 7]  450 	ld	(hl), c
   01E1 23            [ 6]  451 	inc	hl
   01E2 70            [ 7]  452 	ld	(hl), b
   01E3 DD F9         [10]  453 	ld	sp, ix
   01E5 DD E1         [14]  454 	pop	ix
   01E7 C9            [10]  455 	ret
                            456 ;src/balls.c:142: void handle_serve(Ball *ball)
                            457 ;	---------------------------------
                            458 ; Function handle_serve
                            459 ; ---------------------------------
   01E8                     460 _handle_serve::
   01E8 DD E5         [15]  461 	push	ix
   01EA DD 21 00 00   [14]  462 	ld	ix,#0
   01EE DD 39         [15]  463 	add	ix,sp
                            464 ;src/balls.c:145: serving = 0;
   01F0 21r27r00      [10]  465 	ld	hl,#_serving + 0
   01F3 36 00         [10]  466 	ld	(hl), #0x00
                            467 ;src/balls.c:148: ball->dx = 1;
   01F5 DD 5E 04      [19]  468 	ld	e,4 (ix)
   01F8 DD 56 05      [19]  469 	ld	d,5 (ix)
   01FB 21 09 00      [10]  470 	ld	hl, #0x0009
   01FE 19            [11]  471 	add	hl, de
   01FF 36 01         [10]  472 	ld	(hl), #0x01
   0201 23            [ 6]  473 	inc	hl
   0202 36 00         [10]  474 	ld	(hl), #0x00
                            475 ;src/balls.c:149: ball->dy = -2;
   0204 21 0B 00      [10]  476 	ld	hl, #0x000b
   0207 19            [11]  477 	add	hl, de
   0208 36 FE         [10]  478 	ld	(hl), #0xfe
   020A 23            [ 6]  479 	inc	hl
   020B 36 FF         [10]  480 	ld	(hl), #0xff
                            481 ;src/balls.c:152: ball->prev_x = ball->x;
   020D FD 21 05 00   [14]  482 	ld	iy, #0x0005
   0211 FD 19         [15]  483 	add	iy, de
   0213 6B            [ 4]  484 	ld	l, e
   0214 62            [ 4]  485 	ld	h, d
   0215 23            [ 6]  486 	inc	hl
   0216 4E            [ 7]  487 	ld	c, (hl)
   0217 23            [ 6]  488 	inc	hl
   0218 46            [ 7]  489 	ld	b, (hl)
   0219 FD 71 00      [19]  490 	ld	0 (iy), c
   021C FD 70 01      [19]  491 	ld	1 (iy), b
                            492 ;src/balls.c:153: ball->prev_y = ball->y;
   021F 21 07 00      [10]  493 	ld	hl, #0x0007
   0222 19            [11]  494 	add	hl,de
   0223 4D            [ 4]  495 	ld	c, l
   0224 44            [ 4]  496 	ld	b, h
   0225 EB            [ 4]  497 	ex	de,hl
   0226 23            [ 6]  498 	inc	hl
   0227 23            [ 6]  499 	inc	hl
   0228 23            [ 6]  500 	inc	hl
   0229 5E            [ 7]  501 	ld	e, (hl)
   022A 23            [ 6]  502 	inc	hl
   022B 56            [ 7]  503 	ld	d, (hl)
   022C 7B            [ 4]  504 	ld	a, e
   022D 02            [ 7]  505 	ld	(bc), a
   022E 03            [ 6]  506 	inc	bc
   022F 7A            [ 4]  507 	ld	a, d
   0230 02            [ 7]  508 	ld	(bc), a
   0231 DD E1         [14]  509 	pop	ix
   0233 C9            [10]  510 	ret
                            511 ;src/balls.c:156: void update_ball(Ball *ball)
                            512 ;	---------------------------------
                            513 ; Function update_ball
                            514 ; ---------------------------------
   0234                     515 _update_ball::
   0234 DD E5         [15]  516 	push	ix
   0236 DD 21 00 00   [14]  517 	ld	ix,#0
   023A DD 39         [15]  518 	add	ix,sp
   023C 21 F5 FF      [10]  519 	ld	hl, #-11
   023F 39            [11]  520 	add	hl, sp
   0240 F9            [ 6]  521 	ld	sp, hl
                            522 ;src/balls.c:158: ball->prev_x = ball->x;
   0241 DD 4E 04      [19]  523 	ld	c,4 (ix)
   0244 DD 46 05      [19]  524 	ld	b,5 (ix)
   0247 FD 21 05 00   [14]  525 	ld	iy, #0x0005
   024B FD 09         [15]  526 	add	iy, bc
   024D 21 01 00      [10]  527 	ld	hl, #0x0001
   0250 09            [11]  528 	add	hl,bc
   0251 DD 75 F9      [19]  529 	ld	-7 (ix), l
   0254 DD 74 FA      [19]  530 	ld	-6 (ix), h
   0257 5E            [ 7]  531 	ld	e, (hl)
   0258 23            [ 6]  532 	inc	hl
   0259 56            [ 7]  533 	ld	d, (hl)
   025A FD 73 00      [19]  534 	ld	0 (iy), e
   025D FD 72 01      [19]  535 	ld	1 (iy), d
                            536 ;src/balls.c:159: ball->prev_y = ball->y;
   0260 FD 21 07 00   [14]  537 	ld	iy, #0x0007
   0264 FD 09         [15]  538 	add	iy, bc
   0266 21 03 00      [10]  539 	ld	hl, #0x0003
   0269 09            [11]  540 	add	hl,bc
   026A DD 75 F7      [19]  541 	ld	-9 (ix), l
   026D DD 74 F8      [19]  542 	ld	-8 (ix), h
   0270 5E            [ 7]  543 	ld	e, (hl)
   0271 23            [ 6]  544 	inc	hl
   0272 56            [ 7]  545 	ld	d, (hl)
   0273 FD 73 00      [19]  546 	ld	0 (iy), e
   0276 FD 72 01      [19]  547 	ld	1 (iy), d
                            548 ;src/balls.c:161: if (ball->active)
   0279 0A            [ 7]  549 	ld	a, (bc)
   027A B7            [ 4]  550 	or	a, a
   027B CAr6Er03      [10]  551 	jp	Z, 00111$
                            552 ;src/balls.c:164: i16 new_x = ball->x + ball->dx;
   027E DD 6E F9      [19]  553 	ld	l,-7 (ix)
   0281 DD 66 FA      [19]  554 	ld	h,-6 (ix)
   0284 5E            [ 7]  555 	ld	e, (hl)
   0285 23            [ 6]  556 	inc	hl
   0286 56            [ 7]  557 	ld	d, (hl)
   0287 21 09 00      [10]  558 	ld	hl, #0x0009
   028A 09            [11]  559 	add	hl,bc
   028B DD 75 FE      [19]  560 	ld	-2 (ix), l
   028E DD 74 FF      [19]  561 	ld	-1 (ix), h
   0291 7E            [ 7]  562 	ld	a, (hl)
   0292 23            [ 6]  563 	inc	hl
   0293 66            [ 7]  564 	ld	h, (hl)
   0294 6F            [ 4]  565 	ld	l, a
   0295 19            [11]  566 	add	hl, de
   0296 33            [ 6]  567 	inc	sp
   0297 33            [ 6]  568 	inc	sp
   0298 E5            [11]  569 	push	hl
                            570 ;src/balls.c:165: i16 new_y = ball->y + ball->dy;
   0299 DD 6E F7      [19]  571 	ld	l,-9 (ix)
   029C DD 66 F8      [19]  572 	ld	h,-8 (ix)
   029F 5E            [ 7]  573 	ld	e, (hl)
   02A0 23            [ 6]  574 	inc	hl
   02A1 56            [ 7]  575 	ld	d, (hl)
   02A2 21 0B 00      [10]  576 	ld	hl, #0x000b
   02A5 09            [11]  577 	add	hl,bc
   02A6 DD 75 FC      [19]  578 	ld	-4 (ix), l
   02A9 DD 74 FD      [19]  579 	ld	-3 (ix), h
   02AC 7E            [ 7]  580 	ld	a, (hl)
   02AD 23            [ 6]  581 	inc	hl
   02AE 66            [ 7]  582 	ld	h, (hl)
   02AF 6F            [ 4]  583 	ld	l, a
   02B0 19            [11]  584 	add	hl,de
   02B1 EB            [ 4]  585 	ex	de,hl
                            586 ;src/balls.c:167: if (new_y >= YOUR_DEAD_Y)
   02B2 7B            [ 4]  587 	ld	a, e
   02B3 D6 BA         [ 7]  588 	sub	a, #0xba
   02B5 7A            [ 4]  589 	ld	a, d
   02B6 17            [ 4]  590 	rla
   02B7 3F            [ 4]  591 	ccf
   02B8 1F            [ 4]  592 	rra
   02B9 DE 80         [ 7]  593 	sbc	a, #0x80
   02BB 38 0F         [12]  594 	jr	C,00102$
                            595 ;src/balls.c:170: ball->active = 0;
   02BD AF            [ 4]  596 	xor	a, a
   02BE 02            [ 7]  597 	ld	(bc), a
                            598 ;src/balls.c:171: ball->dy = 0;
   02BF DD 6E FC      [19]  599 	ld	l,-4 (ix)
   02C2 DD 66 FD      [19]  600 	ld	h,-3 (ix)
   02C5 AF            [ 4]  601 	xor	a, a
   02C6 77            [ 7]  602 	ld	(hl), a
   02C7 23            [ 6]  603 	inc	hl
   02C8 77            [ 7]  604 	ld	(hl), a
                            605 ;src/balls.c:172: return;
   02C9 C3r6Er03      [10]  606 	jp	00111$
   02CC                     607 00102$:
                            608 ;src/balls.c:175: hits |= background_bounce_ball(new_x, new_y);
   02CC C5            [11]  609 	push	bc
   02CD D5            [11]  610 	push	de
   02CE D5            [11]  611 	push	de
   02CF DD 6E F5      [19]  612 	ld	l,-11 (ix)
   02D2 DD 66 F6      [19]  613 	ld	h,-10 (ix)
   02D5 E5            [11]  614 	push	hl
   02D6 CDr00r00      [17]  615 	call	_background_bounce_ball
   02D9 F1            [10]  616 	pop	af
   02DA F1            [10]  617 	pop	af
   02DB D1            [10]  618 	pop	de
   02DC C1            [10]  619 	pop	bc
   02DD DD 75 FB      [19]  620 	ld	-5 (ix), l
                            621 ;src/balls.c:176: hits |= bat_bounce_ball(ball, new_x, new_y);
   02E0 D5            [11]  622 	push	de
   02E1 D5            [11]  623 	push	de
   02E2 DD 6E F5      [19]  624 	ld	l,-11 (ix)
   02E5 DD 66 F6      [19]  625 	ld	h,-10 (ix)
   02E8 E5            [11]  626 	push	hl
   02E9 C5            [11]  627 	push	bc
   02EA CDr00r00      [17]  628 	call	_bat_bounce_ball
   02ED F1            [10]  629 	pop	af
   02EE F1            [10]  630 	pop	af
   02EF F1            [10]  631 	pop	af
   02F0 D1            [10]  632 	pop	de
   02F1 DD 7E FB      [19]  633 	ld	a, -5 (ix)
   02F4 B5            [ 4]  634 	or	a, l
   02F5 4F            [ 4]  635 	ld	c, a
                            636 ;src/balls.c:177: hits |= blocks_bounce_ball(ball, new_x, new_y);
   02F6 C5            [11]  637 	push	bc
   02F7 D5            [11]  638 	push	de
   02F8 D5            [11]  639 	push	de
   02F9 DD 6E F5      [19]  640 	ld	l,-11 (ix)
   02FC DD 66 F6      [19]  641 	ld	h,-10 (ix)
   02FF E5            [11]  642 	push	hl
   0300 DD 6E 04      [19]  643 	ld	l,4 (ix)
   0303 DD 66 05      [19]  644 	ld	h,5 (ix)
   0306 E5            [11]  645 	push	hl
   0307 CDr00r00      [17]  646 	call	_blocks_bounce_ball
   030A F1            [10]  647 	pop	af
   030B F1            [10]  648 	pop	af
   030C F1            [10]  649 	pop	af
   030D D1            [10]  650 	pop	de
   030E C1            [10]  651 	pop	bc
   030F 79            [ 4]  652 	ld	a, c
   0310 B5            [ 4]  653 	or	a, l
   0311 DD 77 FB      [19]  654 	ld	-5 (ix), a
                            655 ;src/balls.c:179: if (hits & BOUNCE_X)
   0314 DD CB FB 46   [20]  656 	bit	0, -5 (ix)
   0318 28 1B         [12]  657 	jr	Z,00104$
                            658 ;src/balls.c:181: ball->dx = -ball->dx;
   031A DD 6E FE      [19]  659 	ld	l,-2 (ix)
   031D DD 66 FF      [19]  660 	ld	h,-1 (ix)
   0320 4E            [ 7]  661 	ld	c, (hl)
   0321 23            [ 6]  662 	inc	hl
   0322 46            [ 7]  663 	ld	b, (hl)
   0323 AF            [ 4]  664 	xor	a, a
   0324 91            [ 4]  665 	sub	a, c
   0325 4F            [ 4]  666 	ld	c, a
   0326 3E 00         [ 7]  667 	ld	a, #0x00
   0328 98            [ 4]  668 	sbc	a, b
   0329 47            [ 4]  669 	ld	b, a
   032A DD 6E FE      [19]  670 	ld	l,-2 (ix)
   032D DD 66 FF      [19]  671 	ld	h,-1 (ix)
   0330 71            [ 7]  672 	ld	(hl), c
   0331 23            [ 6]  673 	inc	hl
   0332 70            [ 7]  674 	ld	(hl), b
   0333 18 0F         [12]  675 	jr	00105$
   0335                     676 00104$:
                            677 ;src/balls.c:185: ball->x = new_x;
   0335 DD 6E F9      [19]  678 	ld	l,-7 (ix)
   0338 DD 66 FA      [19]  679 	ld	h,-6 (ix)
   033B DD 7E F5      [19]  680 	ld	a, -11 (ix)
   033E 77            [ 7]  681 	ld	(hl), a
   033F 23            [ 6]  682 	inc	hl
   0340 DD 7E F6      [19]  683 	ld	a, -10 (ix)
   0343 77            [ 7]  684 	ld	(hl), a
   0344                     685 00105$:
                            686 ;src/balls.c:188: if (hits & BOUNCE_Y)
   0344 DD CB FB 4E   [20]  687 	bit	1, -5 (ix)
   0348 28 1B         [12]  688 	jr	Z,00107$
                            689 ;src/balls.c:190: ball->dy = -ball->dy;
   034A DD 6E FC      [19]  690 	ld	l,-4 (ix)
   034D DD 66 FD      [19]  691 	ld	h,-3 (ix)
   0350 4E            [ 7]  692 	ld	c, (hl)
   0351 23            [ 6]  693 	inc	hl
   0352 46            [ 7]  694 	ld	b, (hl)
   0353 AF            [ 4]  695 	xor	a, a
   0354 91            [ 4]  696 	sub	a, c
   0355 4F            [ 4]  697 	ld	c, a
   0356 3E 00         [ 7]  698 	ld	a, #0x00
   0358 98            [ 4]  699 	sbc	a, b
   0359 47            [ 4]  700 	ld	b, a
   035A DD 6E FC      [19]  701 	ld	l,-4 (ix)
   035D DD 66 FD      [19]  702 	ld	h,-3 (ix)
   0360 71            [ 7]  703 	ld	(hl), c
   0361 23            [ 6]  704 	inc	hl
   0362 70            [ 7]  705 	ld	(hl), b
   0363 18 09         [12]  706 	jr	00111$
   0365                     707 00107$:
                            708 ;src/balls.c:194: ball->y = new_y;
   0365 DD 6E F7      [19]  709 	ld	l,-9 (ix)
   0368 DD 66 F8      [19]  710 	ld	h,-8 (ix)
   036B 73            [ 7]  711 	ld	(hl), e
   036C 23            [ 6]  712 	inc	hl
   036D 72            [ 7]  713 	ld	(hl), d
   036E                     714 00111$:
   036E DD F9         [10]  715 	ld	sp, ix
   0370 DD E1         [14]  716 	pop	ix
   0372 C9            [10]  717 	ret
                            718 	.area _CODE
                            719 	.area _INITIALIZER
                            720 	.area _CABS (ABS)
